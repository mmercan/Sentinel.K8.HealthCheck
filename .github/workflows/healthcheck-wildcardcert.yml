name: Healthcheck Wildcard Cert

on:
  push:
    branches: [master]
    paths:
      - Helm/sentinel-healthcheck/charts/wildcard-cert/**
  pull_request:
    branches: [master]

  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"

jobs:
  deploy-dev:
    environment: Dev
    runs-on: ubuntu-latest
    env:
      ARTIFACT_PATH: ${{ github.workspace }}
      IMAGE_NAME: ${{ github.repository }}
      chartName: "wildcard-cert"
      chartNameClusterIssuer: "wildcard-cert-cluster-issuer"
      namespace: "sentinel-healthcheck"
      releaseName: "wildcard-cert-dev"
      releaseNameClusterIssuer: "wildcard-cert-cluster-issuer-dev"
      AzureClientId: ${{ secrets.AZURECLIENTID }}
      AzureClientSecret: ${{ secrets.AZURECLIENTSECRET }}
      AzureSubscriptionId: ${{ secrets.AZURESUBSCRIPTIONID }}
      AzureTenantId: ${{ secrets.AZURETENANTID }}
      AzureDnsZoneResourceGroup: ${{ secrets.AZUREDNSZONERESOURCEGROUP }}
      AzurehostedZoneName: ${{ secrets.AZUREHOSTEDZONENAME }}
      email: ${{ secrets.EMAIL }}
      pipelines_runuri: '"${{ GITHUB.SERVER_URL }}/${{ GITHUB.REPOSITORY }}/actions/runs/${{ GITHUB.RUN_ID }}"'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v1.1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
          context: matt-aks

      - name: add KUBECONFIG To env file
        run: |
          cp ${{ env.KUBECONFIG }} /home/runner/work/_temp/config
          ls /home/runner/work/_temp

      - name: Check Helm Version
        run: |
          helm version

      - name: Helm Package Cluster Issuer
        run: |
          helm package --version 2.0.0-$GITHUB_RUN_ID --destination /home/runner/work/_temp ./Helm/sentinel-healthcheck/charts/$chartNameClusterIssuer

      - name: Helm Package
        run: |
          helm package --version 2.0.0-$GITHUB_RUN_ID --destination /home/runner/work/_temp ./Helm/sentinel-healthcheck/charts/$chartName

      - name: Validate Helm Package Cluster Issuer
        run: |
          helm template "./Helm/sentinel-healthcheck/charts/$chartName"

      - name: Validate Helm Package
        run: |
          helm template "./Helm/sentinel-healthcheck/charts/$chartName" -f "./Helm/values/$chartName/dev-values.yaml"

      - name: Helm upgrade Cluster Issuer
        run: |
          helm upgrade --namespace cert-manager --install \
          --history-max 1 \
          --set AzureClientId=$AzureClientId \
          --set AzureClientSecret=$AzureClientSecret \
          --set AzureSubscriptionId=$AzureSubscriptionId \
          --set AzureTenantId=$AzureTenantId \
          --set AzureDnsZoneResourceGroup=$AzureDnsZoneResourceGroup \
          --set AzurehostedZoneName=$AzurehostedZoneName \
          --set email=$email \
          --wait $releaseName \
          /home/runner/work/_temp/$chartNameClusterIssuer-2.0.0-$GITHUB_RUN_ID.tgz \

      - name: Helm upgrade Certs
        run: |
          helm upgrade --namespace $namespace --install \
           -f "./Helm/values/$chartName/dev-values.yaml" \
          --history-max 1 \
          --wait $releaseName \
          /home/runner/work/_temp/$chartName-2.0.0-$GITHUB_RUN_ID.tgz \

      - name: output env vars
        run: |
          echo  " $ARTIFACT_PATH "
          echo  " $IMAGE_NAME "
          echo  " $chartName "
          echo  " $namespace "
          echo  " $releaseName "
